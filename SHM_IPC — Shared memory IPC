// SHM_IPC - shm_ipc.c
#include <stdio.h>
#include <sys/mman.h>
#include <sys/wait.h>
#include <unistd.h>
#include <string.h>
#include <stdlib.h>

int main() {
    const char *msg = "Hello from parent via SHM!";
    size_t size = 4096;
    char *mem = mmap(NULL, size, PROT_READ|PROT_WRITE, MAP_SHARED|MAP_ANONYMOUS, -1, 0);
    if (mem == MAP_FAILED) { perror("mmap"); return 1; }

    pid_t pid = fork();
    if (pid < 0) { perror("fork"); return 1; }
    if (pid == 0) {
        sleep(1); // wait for parent to write
        printf("Child read: %s\n", mem);
        munmap(mem, size);
        exit(0);
    } else {
        strncpy(mem, msg, size-1);
        wait(NULL);
        munmap(mem, size);
    }
    return 0;
}
