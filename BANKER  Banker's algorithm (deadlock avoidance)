#include <stdio.h>
#include <stdbool.h>

bool safe(int n, int m, int avail[], int max[][3], int alloc[][3]) {
    int need[n][3];
    for(int i=0;i<n;i++) for(int j=0;j<m;j++) need[i][j]=max[i][j]-alloc[i][j];
    bool finish[n]; for(int i=0;i<n;i++) finish[i]=false;
    int work[3]; for(int j=0;j<m;j++) work[j]=avail[j];
    int count=0;
    while(count<n){
        bool found=false;
        for(int i=0;i<n;i++) if(!finish[i]){
            int j; for(j=0;j<m;j++) if(need[i][j]>work[j]) break;
            if(j==m){
                for(int k=0;k<m;k++) work[k]+=alloc[i][k];
                finish[i]=true; found=true; count++;
            }
        }
        if(!found) break;
    }
    return (count==n);
}

int main(){
    int n=5, m=3;
    int avail[] = {3,3,2};
    int max[5][3] = {{7,5,3},{3,2,2},{9,0,2},{2,2,2},{4,3,3}};
    int alloc[5][3]={{0,1,0},{2,0,0},{3,0,2},{2,1,1},{0,0,2}};
    printf("System is in %s state\n", safe(n,m,avail,max,alloc) ? "safe":"unsafe");
    return 0;
}
